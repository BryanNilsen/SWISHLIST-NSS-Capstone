{"version":3,"sources":["components/nav/Navbar.js","modules/APIManager.js","components/workouts/ShotsAddedRow.js","components/workouts/ShotsAdded.js","components/workouts/ShotMap.js","components/workouts/NewList.js","components/workouts/TotalGenerator.js","components/workouts/Shotlog.js","components/workouts/ViewList.js","components/motivation/Motivation.js","components/profiles/Profile.js","components/stats/Stats.js","components/ApplicationViews.js","components/Swishlist.js","components/authentication/Login.js","components/authentication/Register.js","components/authentication/Welcome.js","App.js","index.js"],"names":["Navbar","logoutUser","localStorage","removeItem","sessionStorage","_this2","this","react_default","a","createElement","Fragment","className","id","Link","to","onClick","Component","remoteURL","APIManager","getEntry","resource","_len","arguments","length","search","Array","_key","fetch","concat","then","data","json","getAllEntries","_len2","_key2","deleteEntry","method","addEntry","newThing","headers","Content-Type","body","JSON","stringify","editEntry","editedThing","ShotsAddedRow","state","shotAttemptsEdit","shotsMadeEdit","handleAttemptsEditState","_this","setState","handleMadeEditState","buildShotAttemptsSelect","shotAttemptsSelect","i","push","key","value","buildShotsMadeSelect","shotAttempts","shotsMadeSelect","handleShotAttemptsEdit","evt","itemToPatch","Number","target","props","editSwishlist","handleShotsMadeEdit","shotsMade","shotlog","shootingPercentage","toFixed","tableRowColor","Math","floor","locationName","style","textAlign","padding","fontWeight","onChange","defaultValue","type","deleteSwishlist","ShotsAdded","shotspots","_this3","width","swishlists","map","find","shotspot","shotLocation","name","ShotsAddedRow_ShotsAddedRow","ShotMap","clickedSpot","newShotAttempts","newShotsMade","newShotLocation","shotSpots","swishlistArray","workoutId","handleCourtMapClick","shotLocationId","shotLocationName","title","newShotLocationName","handleFieldChange","stateToChange","shotsAttempted","handleNewSwishlist","e","alert","constructNewSwishlist","newSwishlist","workout_id","user_id","userId","createNewSwishlist","finishWorkout","clearWorkoutId","toggleAddForm","src","alt","spotStyle","top","left","ShotsAdded_ShotsAdded","NewList","newDate","newGym","newNotes","currentUserId","getCurrentUser","hideAddButton","hideAddForm","currentState","handleNewWorkout","constructNewWorkout","newWorkout","date","gym","notes","createNewWorkout","console","log","response","setItem","ShotMap_ShotMap","TotalGenerator","initialized","getSum","b","array","shots","Promise","all","totalShotsAttempted","reduce","total","amount","totalShotsMade","totalPercentage","Shotlog","shotlogs","totalShots","TotalGenerator_TotalGenerator","ViewList","workouts","shownForm","toggleEditForm","deleteWorkout","deleteWorkoutSwishlists","editWorkout","editedWorkout","results","forEach","result","constructEditedWorkout","newWorkoutDate","newWorkoutGym","newWorkoutNotes","workout","htmlFor","Shotlog_Shotlog","Motivation","quotes","quoteCount","randomQuote","random","quote","author","Profile","workoutLevel","totalShotAttemptsArray","totalShotsMadeArray","loggedWorkoutLevel","loggedWorkouts","user","firstName","lastName","nickname","photoURL","age","hometown","height_ft","height_in","allWorkouts","numberOfWorkouts","allSwishlists","numberOfSwishlists","Stats","users","usersArray","newObj","Object","values","totalsArray","sort","parseFloat","slice","userFirstName","userLastName","userPhoto","userDisplayName","charAt","ApplicationViews","getItem","Route","exact","path","render","Redirect","NewList_NewList","assign","ViewList_ViewList","Profile_Profile","Stats_Stats","Motivation_Motivation","Swishlist","Navbar_Navbar","ApplicationViews_ApplicationViews","Login","loginEmail","loginPassword","remember","handleLogin","returns","setCurrentUserState","hideLoginForm","placeholder","required","autoFocus","handleChangeForm","Register","registerFName","registerLName","registerEmail","registerNickname","registerHometown","registerAge","registerHeightFt","registerHeightIn","registerPhotoURL","registerPassword","handleRegister","includes","constructNewUser","newUser","email","password","registerNewUser","Welcome","shotAttemptsArray","toLocaleString","Login_Login","Register_Register","App","currentUser","isLoggedIn","isAuthenticated","Swishlist_Swishlist","Welcome_Welcome","ReactDOM","BrowserRouter","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.8218d39b.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"./Navbar.css\"\n\nexport default class Navbar extends Component {\n\n  logoutUser = () => {\n    localStorage.removeItem('userId')\n    sessionStorage.removeItem('userId')\n    sessionStorage.removeItem('workoutId')\n  }\n\n\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\"nav\">\n          <div className=\"flex\">\n            <div id=\"logo\" className=\"logo\">\n              <h1 className=\"logo_small\"><span className=\"text_orange\">swish</span><span className=\"text_white\">list</span></h1>\n              <p className=\"logo_tagline_small\">YOU MISS 100% OF THE SHOTS YOU DON'T TAKE</p>\n            </div>\n            <p className=\"noTopMargin\">\n              <Link className=\"nav_item small_nav\" to=\"/\" onClick={() => this.logoutUser()}>logout</Link>\n              <Link className=\"nav_item small_nav\" to=\"/motivation\">motivation</Link></p>\n          </div>\n          <ul className=\"nav_ul\">\n            <li>\n              <Link className=\"nav_item\" to=\"/newlist\">NEW LIST</Link>\n            </li>\n            <li>\n              <Link className=\"nav_item\" to=\"/viewlists\">VIEW LISTS</Link>\n            </li>\n            <li>\n              <Link className=\"nav_item\" to=\"/stats\">STATS</Link>\n            </li>\n            <li>\n              <Link className=\"nav_item\" to=\"/profile\">PROFILE</Link>\n            </li>\n          </ul>\n        </nav>\n      </React.Fragment>\n    )\n  }\n}","const remoteURL = \"http://localhost:5002\"\n\nconst APIManager = {\n// edit fetch variables to match swishlist data needed\n\n  getEntry(resource, id, ...search) {\n    return fetch(`${remoteURL}/${resource}/${id}${search}`)\n    .then(data => data.json())\n  },\n\n  getAllEntries(resource, ...search) {\n    return fetch(`${remoteURL}/${resource}${search}`)\n    .then(data => data.json())\n  },\n\n  deleteEntry(resource, id){\n    return fetch(`${remoteURL}/${resource}/${id}`, {method: \"DELETE\"})\n    .then(data => data.json())\n  },\n\n  addEntry(resource, newThing) {\n    return fetch(`${remoteURL}/${resource}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newThing)\n    }).then(data => data.json())\n  },\n\n  editEntry(resource, id, editedThing) {\n    return fetch(`${remoteURL}/${resource}/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(editedThing)\n    })\n  }\n}\n\nexport default APIManager","import React, { Component } from \"react\"\nimport \"./Shotlog.css\"\n\n\nexport default class ShotsAddedRow extends Component {\n\n  state = {\n    shotAttemptsEdit: false,\n    shotsMadeEdit: false,\n  }\n\n\n  handleAttemptsEditState = () => {\n    this.setState({\n      shotAttemptsEdit: true\n    })\n  }\n\n  handleMadeEditState = () => {\n    this.setState({\n      shotsMadeEdit: true\n    })\n  }\n\n  buildShotAttemptsSelect = () => {\n    let shotAttemptsSelect = []\n    for (let i = 0; i <= 100; i += 5) {\n      shotAttemptsSelect.push(<option key={i} value={i}>{i}</option>);\n    }\n    return shotAttemptsSelect;\n  }\n\n\n  buildShotsMadeSelect = (shotAttempts) => {\n    let shotsMadeSelect = []\n    for (let i = 0; i <= shotAttempts; i += 1) {\n      shotsMadeSelect.push(<option key={i} value={i}>{i}</option>);\n    }\n    return shotsMadeSelect;\n  }\n\n  handleShotAttemptsEdit = (evt) => {\n    const itemToPatch = {shotAttempts: Number(evt.target.value)}\n    this.props.editSwishlist(evt.target.id, itemToPatch)\n    this.setState({\n      shotAttemptsEdit: false,\n      shotsMadeEdit: false,\n    })\n  }\n\n  handleShotsMadeEdit = (evt) => {\n    const itemToPatch = {shotsMade: Number(evt.target.value)}\n    this.props.editSwishlist(evt.target.id, itemToPatch)\n    this.setState({\n      shotAttemptsEdit: false,\n      shotsMadeEdit: false\n    })\n  }\n\n  render() {\n    const shotlog = this.props.shotlog\n    const shotsMade = Number(shotlog.shotsMade)\n    const shotAttempts = Number(shotlog.shotAttempts)\n    const shootingPercentage = Number(((shotsMade / shotAttempts) * 100).toFixed(1))\n    const tableRowColor = `trc_${Math.floor(((shotsMade / shotAttempts) * 10))}`\n    const locationName = this.props.locationName\n\n    return (\n      <tr key={shotlog.id} className={`shotlog_hover ${tableRowColor}`}>\n        {/* <td style={{ textAlign: \"left\", padding: \"0px 8px\", fontWeight: \"bold\" }}>{shotlog.shotLocation}</td> */}\n        <td style={{ textAlign: \"left\", padding: \"0px 8px\", fontWeight: \"bold\" }}>{locationName}</td>\n        <td style={{ textAlign: \"center\" }} onClick={this.handleAttemptsEditState}>\n          {\n            this.state.shotAttemptsEdit\n              ?\n              (\n                <select id={shotlog.id} onChange={this.handleShotAttemptsEdit}>\n                  <option defaultValue=\"selected\">Select</option>\n                  {this.buildShotAttemptsSelect()}\n                </select>\n              )\n              :\n              shotlog.shotAttempts\n          }\n        </td>\n        <td style={{ textAlign: \"center\" }} onClick={this.handleMadeEditState}>\n        {\n            this.state.shotsMadeEdit\n              ?\n              (\n                <select id={shotlog.id} onChange={this.handleShotsMadeEdit}>\n                  <option defaultValue=\"selected\">Select</option>\n                  {this.buildShotsMadeSelect(shotlog.shotAttempts)}\n                </select>\n              )\n              :\n              shotlog.shotsMade\n          }\n        </td>\n        <td style={{ textAlign: \"center\" }} >{shootingPercentage}</td>\n        <td style={{ textAlign: \"center\" }} ><button type=\"submit\" onClick={() => this.props.deleteSwishlist(shotlog.id)}>X</button></td>\n      </tr>\n    )\n  }\n}","import React, { Component } from \"react\"\nimport \"./Shotlog.css\"\nimport ShotsAddedRow from './ShotsAddedRow'\nimport APIManager from '../../modules/APIManager'\n\nexport default class ShotsAdded extends Component {\n\n  state = {\n    shotspots: []\n  }\n\n\n  componentDidMount() {\n\n    APIManager.getAllEntries(\"shotSpots\")\n      .then(shotspots => this.setState({ shotspots : shotspots }))\n  }\n\n  render() {\n\n    return (\n      <div className=\"shotlog_container\">\n        <div className=\"shotlog_card\">\n          <table className=\"shotlog_table\">\n            <tbody>\n              <tr className=\"shotlog_rowHeader\">\n                <td width=\"30%\">Shot Location</td>\n                <td width=\"20%\" style={{ textAlign: \"center\" }} >Attempts</td>\n                <td width=\"20%\" style={{ textAlign: \"center\" }} >Made</td>\n                <td width=\"20%\" style={{ textAlign: \"center\" }} >%</td>\n                <td width=\"10%\" style={{ textAlign: \"center\" }} >Delete</td>\n              </tr>\n              {\n                this.props.swishlists.map((shotlog) => {\n                  let locationName = this.state.shotspots.find(shotspot => shotlog.shotLocation === shotspot.id).name\n                  return (\n\n                    <ShotsAddedRow locationName={locationName} shotlog={shotlog} deleteSwishlist={this.props.deleteSwishlist} editSwishlist={this.props.editSwishlist} key={shotlog.id} />\n\n                  )\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './ShotMap.css';\nimport APIManager from '../../modules/APIManager'\nimport ShotsAdded from './ShotsAdded'\n\nexport default class ShotMap extends Component {\n\n  state = {\n    clickedSpot: null,\n    newShotAttempts: \"\",\n    newShotsMade: \"\",\n    newShotLocation: \"\",\n    shotSpots: [],\n    swishlists: [],\n    swishlistArray: [],\n  }\n\n\n\n\n  componentDidMount() {\n    APIManager.getAllEntries(\"shotSpots\")\n      .then((shotSpots) => {\n        this.setState({ shotSpots: shotSpots })\n      })\n\n    APIManager.getAllEntries(\"swishlists\", `?workout_id=${this.props.workoutId}`)\n      .then((swishlists) => {\n        this.setState({ swishlists: swishlists })\n      })\n  }\n\n\n  deleteSwishlist = (id) => {\n    this.setState({ swishlistArray: [] })\n    APIManager.deleteEntry(\"swishlists\", id)\n      .then(() => APIManager.getAllEntries(\"swishlists\", `?workout_id=${this.props.workoutId}`))\n      .then(swishlists => this.setState({ swishlists: swishlists }))\n  }\n\n\n  editSwishlist = (id, editedThing) => {\n    this.setState({ swishlistArray: [] })\n    APIManager.editEntry(\"swishlists\", id, editedThing)\n      .then(() => APIManager.getAllEntries(\"swishlists\", `?workout_id=${this.props.workoutId}`))\n      .then(swishlists => this.setState({ swishlists: swishlists }))\n  }\n\n  handleCourtMapClick = (evt) => {\n    const shotLocationId = evt.target.id\n    const shotLocationName = evt.target.title\n    this.setState({\n      newShotLocation: +shotLocationId,\n      newShotLocationName: shotLocationName\n     })\n  }\n\n\n  handleFieldChange = (evt) => {\n    const stateToChange = {}\n    stateToChange[evt.target.id] = evt.target.value\n    this.setState(stateToChange)\n  }\n\n\n  buildShotAttemptsSelect = () => {\n    let shotAttemptsSelect = []\n    for (let i = 0; i <= 100; i += 5) {\n      shotAttemptsSelect.push(<option key={i} value={i}>{i}</option>);\n    }\n    return shotAttemptsSelect;\n  }\n\n\n  buildShotsMadeSelect = () => {\n    const shotsAttempted = this.state.newShotAttempts\n    let shotsMadeSelect = []\n    for (var i = 0; i <= shotsAttempted; i++) {\n      shotsMadeSelect.push(<option key={i} value={i}>{i}</option>);\n    }\n    return shotsMadeSelect;\n  }\n\n\n  // Handles validation for new swishlist (throws an alert on empty fields or unselected shot location)\n  // Then executes constructSwishlist to create new workout in database\n  handleNewSwishlist = (e) => {\n    if (this.state.newShotAttempts === \"\" || this.state.newShotsMade === \"\") {\n      alert(\"No fields should be left blank\")\n    } else if (this.state.newShotLocation === \"\") {\n      alert(\"Please select a shot location on the map\")\n    } else {\n      this.constructNewSwishlist()\n      alert(\"Shot recorded. Enter more or end workout to finish.\")\n      // clear state for new shots\n      this.setState({ newShotLocation: \"\" })\n    }\n  }\n\n  //Handles construction of new swishlist object, then executes createNewSwishlist to add new swishlist to database\n  constructNewSwishlist = () => {\n    const newSwishlist = {\n      workout_id: this.props.workoutId,\n      user_id: this.props.userId,\n      shotLocation: this.state.newShotLocation,\n      shotAttempts: Number(this.state.newShotAttempts),\n      shotsMade: Number(this.state.newShotsMade),\n    }\n    this.createNewSwishlist(newSwishlist)\n  }\n\n  //Handles creation of new swishlist object\n  createNewSwishlist = newSwishlist => {\n    let swishlistArray = this.state.swishlistArray\n    return APIManager.addEntry(\"swishlists\", newSwishlist)\n      .then(APIManager.getAllEntries(\"swishlists\", `?workout_id=${this.props.workoutId}`))\n      .then((swishlists) => {\n        swishlistArray.push(swishlists)\n        this.setState({\n          swishlists: swishlistArray\n         })\n      })\n  }\n\n  finishWorkout = () => {\n    this.props.clearWorkoutId();\n    this.props.toggleAddForm()\n  }\n\n  render() {\n    return (\n      <div className=\"main_wrapper\">\n        <div className=\"court_wrapper\">\n\n          {/* court image */}\n          <img src=\"/images/swishlist_court.svg\" alt=\"shooting locations map\"></img>\n\n          {/* <!-- begin court text overlay div --> */}\n          <div className=\"court_text\">\n            <p className=\"underline clear_padding\">select shotspot: {this.state.newShotLocationName}</p>\n\n\n            <p className=\"clear_padding\">shots attempted -\n              <select id=\"newShotAttempts\" onChange={this.handleFieldChange}>\n                <option defaultValue=\"selected\">Select</option>\n                {this.buildShotAttemptsSelect()}\n              </select>\n            </p>\n            <p className=\"clear_padding\">shots made -\n              <select id=\"newShotsMade\" onChange={this.handleFieldChange}>\n                <option defaultValue=\"selected\">Select</option>\n                {this.buildShotsMadeSelect()}\n              </select>\n            </p>\n            <p className=\"clear_padding\">\n              <button type=\"submit\" onClick={this.handleNewSwishlist}>Add Shots</button>\n              <button type=\"submit\" onClick={this.finishWorkout}>Finish Workout</button>\n            </p>\n          </div>\n          {/* end court text div */}\n\n          {/* begin shot locations divs generated from database */}\n          <div id=\"shotspots\" onClick={this.handleCourtMapClick}>\n\n            {\n              this.state.shotSpots.map((shotspot) => {\n                const spotStyle = {\n                  top: shotspot.top,\n                  left: shotspot.left,\n                }\n\n                return (\n                  <div id={shotspot.id} className=\"spot\" style={spotStyle} key={shotspot.id} title={shotspot.name}></div>\n                )\n              })\n            }\n          </div>\n        </div>\n        <ShotsAdded workoutId={this.props.workoutId} swishlists={this.state.swishlists} deleteSwishlist={this.deleteSwishlist} editSwishlist={this.editSwishlist}/>\n      </div>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react'\nimport './ShotMap.css'\nimport ShotMap from './ShotMap';\nimport './Workouts.css';\nimport APIManager from '../../modules/APIManager'\n\nexport default class NewList extends Component {\n\n  state = {\n    newDate: \"\",\n    newGym: \"\",\n    newNotes: \"\",\n    currentUserId: this.props.getCurrentUser(),\n    workoutId: \"\",\n    hideAddButton: false,\n    hideAddForm: false,\n  }\n\n\n  toggleAddForm = () => {\n    const currentState = this.state.hideAddForm;\n    this.setState({\n      hideAddForm: !currentState,\n      hideAddButton: !currentState\n    });\n  }\n\n\n  // Handles input field changes and sets state\n  handleFieldChange = (evt) => {\n    const stateToChange = {}\n    stateToChange[evt.target.id] = evt.target.value\n    this.setState(stateToChange)\n  }\n\n\n  // Handles validation for new workout (throws an alert on empty fields)\n  // Then executes constructNewWorkout to create new workout in database\n  handleNewWorkout = (e) => {\n    if (this.state.newDate === \"\" || this.state.newGym === \"\" || this.state.newNotes === \"\") {\n      alert(\"No fields should be left blank\")\n    } else {\n      this.constructNewWorkout()\n      alert(\"You have started a new workout! Please start logging your shots\")\n      this.toggleAddForm()\n    }\n  }\n\n\n  //Handles construction of new workout object, then executes createNewWorkout to add new workout to database\n  constructNewWorkout = () => {\n    this.clearWorkoutId()\n    const newWorkout = {\n      date: this.state.newDate,\n      gym: this.state.newGym,\n      notes: this.state.newNotes,\n      user_id: this.state.currentUserId\n    }\n    this.createNewWorkout(newWorkout)\n      .then(() => console.log(newWorkout))\n  }\n\n  //Handles creation of new workout object\n  createNewWorkout = newWorkout => {\n    return APIManager.addEntry(\"workouts\", newWorkout)\n      .then((response) => {\n        this.setState({ workoutId: response.id })\n        sessionStorage.setItem( \"workoutId\", response.id)\n      })\n  }\n\n  clearWorkoutId = () => {\n    sessionStorage.removeItem('workoutId')\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div id=\"newlist_container\" className=\"page_container\">\n          {/* begin contents */}\n          <h2>New Swishlist</h2>\n          <div className=\"workout_card\">\n\n            <p>Select date, gym, and enter any notes relevant to your workout</p>\n            <p>Click \"Start swishlist\" to begin</p>\n            <div id=\"newlist_form\" className=\"margin_bottom\">\n            <table style={{ width: \"100%\" }}>\n              <tbody>\n                <tr>\n                  <td style={{ width: \"50px\" }}>Date</td>\n                  <td><input type=\"date\" onChange={this.handleFieldChange} id=\"newDate\" className=\"edit_form_input\"></input></td>\n                </tr>\n                <tr>\n                  <td>Gym</td>\n                  <td><input type=\"text\" onChange={this.handleFieldChange} id=\"newGym\" className=\"edit_form_input\"></input></td>\n                </tr>\n                <tr>\n                  <td>Notes</td>\n                  <td><input type=\"text\" onChange={this.handleFieldChange} id=\"newNotes\" className=\"edit_form_input\" style={{ width: \"80%\" }}/></td>\n                </tr>\n              </tbody>\n            </table>\n              <button type=\"submit\" className={this.state.hideAddForm ? \"hide\" : \"btn_edit\"} onClick={() => { this.handleNewWorkout() }}>Start Workout</button>\n            </div>\n            {/* end contents */}\n            <div id=\"shotmap_div\" className={this.state.hideAddForm ? null : 'hide'}>\n              <hr></hr>\n              <ShotMap userId={this.state.currentUserId} workoutId={this.state.workoutId} clearWorkoutId={this.clearWorkoutId} toggleAddForm={this.toggleAddForm} />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}","import React, { Component } from \"react\"\nimport APIManager from '../../modules/APIManager'\n\nexport default class TotalGenerator extends Component {\n\n  state = {\n    shotAttempts: [],\n    shotsMade: [],\n    initialized: false\n  }\n\n  componentDidMount() {\n    let array = [\n    APIManager.getAllEntries(\"swishlists\", `?workout_id=${this.props.workoutId}`)\n      .then((swishlists) => {\n        swishlists.map((shots) => {\n          // console.log(\"shot attempts per swishlist:\", shots.shotAttempts)\n          // console.log(\"shots made per swishlist:\", shots.shotsMade)\n          this.state.shotAttempts.push(shots.shotAttempts)\n          this.state.shotsMade.push(shots.shotsMade)\n          return shots\n        }\n        )\n      })\n    ]\n\n    return Promise.all(array)\n      .then(() => this.setState({\n        initialized: true,\n      }))\n\n  }\n\n  getSum = (a, b) => {\n    return a + b;\n  }\n\n\n\nrender() {\n  if (this.state.initialized === true) {\n\n  const totalShotsAttempted = this.state.shotAttempts.reduce((total, amount) => { return total + amount}, 0)\n  const totalShotsMade = this.state.shotsMade.reduce((total, amount) => { return total + amount}, 0)\n  const totalPercentage = Number(((totalShotsMade / totalShotsAttempted) * 100).toFixed(1)) || 0\n\n\n  return (\n\n    <tr className=\"shotlog_totals\" >\n      <td width=\"40%\">Totals</td>\n      <td width=\"20%\" style={{ textAlign: \"center\" }}>{totalShotsAttempted}</td>\n      <td width=\"20%\" style={{ textAlign: \"center\" }}>{totalShotsMade}</td>\n      <td width=\"20%\" style={{ textAlign: \"center\" }}>{totalPercentage}</td>\n    </tr>\n  )\n  } else {\n    return (\n      <tr className=\"shotlog_totals\" >\n      <td width=\"40%\">Totals</td>\n      <td width=\"20%\" style={{ textAlign: \"center\" }}>calculating</td>\n      <td width=\"20%\" style={{ textAlign: \"center\" }}>calculating</td>\n      <td width=\"20%\" style={{ textAlign: \"center\" }}>calculating</td>\n    </tr>\n    )\n  }\n\n}\n\n\n\n}\n","import React, { Component } from \"react\"\nimport APIManager from '../../modules/APIManager'\nimport \"./Shotlog.css\"\nimport TotalGenerator from './TotalGenerator'\nexport default class Shotlog extends Component {\n\n  state = {\n    shotlogs: [],\n    shotspots: [],\n    totalShots: [],\n    locationName: \"\"\n  }\n\n\n  componentDidMount() {\n\n    const stateToChange = {}\n\n    APIManager.getAllEntries(\"shotSpots\")\n      .then(shotspots => {\n        stateToChange.shotspots = shotspots\n        return APIManager.getAllEntries(\"swishlists\", `?workout_id=${this.props.workoutId}`)\n      })\n      .then((shotlogs) => {\n        console.log(\"shotlogs\", shotlogs)\n        stateToChange.shotlogs = shotlogs\n        this.setState(stateToChange)\n      })\n\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"shotlog_container\">\n        <div className=\"shotlog_card\">\n          <table className=\"shotlog_table\">\n            <tbody>\n              <tr className=\"shotlog_rowHeader\">\n                <td width=\"40%\">Shot Location</td>\n                <td width=\"20%\" style={{ textAlign: \"center\" }} >Attempts</td>\n                <td width=\"20%\" style={{ textAlign: \"center\" }} >Made</td>\n                <td width=\"20%\" style={{ textAlign: \"center\" }} >%</td>\n              </tr>\n              {\n                this.state.shotlogs.map((shotlog) => {\n                  const shotsMade = Number(shotlog.shotsMade)\n                  const shotAttempts = Number(shotlog.shotAttempts)\n                  const shootingPercentage = Number(((shotsMade / shotAttempts) * 100).toFixed(1))\n                  const tableRowColor = `trc_${Math.floor(((shotsMade / shotAttempts) * 10))}`\n\n                  let locationName = this.state.shotspots.find(shotspot => shotlog.shotLocation === shotspot.id).name\n\n\n                  return (\n                    <tr key={shotlog.id} className={`shotlog_hover ${tableRowColor}`}>\n                      <td style={{ textAlign: \"left\", padding: \"0px 8px\", fontWeight: \"bold\" }}>{locationName}</td>\n                      <td style={{ textAlign: \"center\" }}>{shotlog.shotAttempts}</td>\n                      <td style={{ textAlign: \"center\" }} >{shotlog.shotsMade}</td>\n                      <td style={{ textAlign: \"center\" }} >{shootingPercentage}</td>\n                    </tr>\n                  )\n                })\n              }\n              <TotalGenerator workoutId={this.props.workoutId} />\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport APIManager from '../../modules/APIManager'\nimport Shotlog from './Shotlog'\nimport \"./Workouts.css\"\n\nexport default class ViewList extends Component {\n\n  state = {\n    currentUserId: this.props.getCurrentUser(),\n    workouts: [],\n    shownForm: null,\n  }\n\n  // This updates state whenever an input field is edited\n  handleFieldChange = (evt) => {\n    const stateToChange = {}\n    stateToChange[evt.target.id] = evt.target.value\n    this.setState(stateToChange)\n  }\n\n  toggleEditForm = (id) => {\n    if (this.state.shownForm === null) {\n      this.setState({\n        shownForm: id,\n      });\n    } else {\n      this.setState({\n        shownForm: null,\n      });\n    }\n  }\n\n\n  componentDidMount() {\n    APIManager.getAllEntries(\"workouts\", `?user_id=${this.state.currentUserId}`)\n      .then((workouts) => {\n        this.setState({ workouts: workouts })\n      })\n  }\n\n  deleteWorkout = (id) => APIManager.deleteEntry(\"workouts\", id)\n    .then(this.deleteWorkoutSwishlists(id))\n    .then(() => APIManager.getAllEntries(\"workouts\", `?user_id=${this.state.currentUserId}`))\n    .then(workouts => this.setState({ workouts: workouts }))\n\n  editWorkout = (id, editedWorkout) => APIManager.editEntry(\"workouts\", id, editedWorkout)\n    .then(() => APIManager.getAllEntries(\"workouts\", `?user_id=${this.state.currentUserId}`))\n    .then(workouts => this.setState({ workouts: workouts }))\n\n\n\n  deleteWorkoutSwishlists = (workoutId) => {\n    APIManager.getAllEntries(\"swishlists\", `?workout_id=${workoutId}`)\n      .then((results) =>\n      results.forEach((result) => APIManager.deleteEntry(\"swishlists\", result.id))\n        )\n  }\n\n\n\n  constructEditedWorkout = (id) => {\n    const editedWorkout = {\n      date: this.state.newWorkoutDate,\n      gym: this.state.newWorkoutGym,\n      notes: this.state.newWorkoutNotes,\n    }\n    this.editWorkout(id, editedWorkout)\n    this.toggleEditForm()\n  }\n\n  render() {\n\n    return (\n      <div id=\"viewlist_container\" className=\"page_container\">\n        <h2>View swishlists</h2>\n        {\n          this.state.workouts.map((workout) => {\n            return (\n              <div className=\"card_container\" key={workout.id}>\n                <div className=\"workout_card\">\n                  {/* begin page content */}\n                  <div id={workout.id} className={`${this.state.shownForm === workout.id ? 'hide' : \"workout_card\"}`}>\n                    <h3 className=\"card_header\">{workout.date}: {workout.gym}</h3>\n                    <p>{workout.notes}</p>\n                  </div>\n                  {/* edit form hidden to start */}\n                  <div id={workout.id} className={`${this.state.shownForm === workout.id ? \"edit_form\" : 'hide'}`}>\n                    <table style={{ width: \"100%\" }}>\n                      <tbody>\n                        <tr>\n                          <td>\n                            <label htmlFor=\"newWorkoutDate\">Date: </label></td>\n                          <td>\n                            <input id=\"newWorkoutDate\" onChange={this.handleFieldChange} type=\"date\" defaultValue={workout.date} className=\"edit_form_input\" />\n                          </td>\n                        </tr>\n                        <tr>\n                          <td style={{ width: \"50px\" }}>\n                            <label htmlFor=\"newWorkoutGym\">Gym: </label></td>\n                          <td>\n                            <input id=\"newWorkoutGym\" onChange={this.handleFieldChange} type=\"text\" defaultValue={workout.gym} className=\"edit_form_input\" />\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <label htmlFor=\"newWorkoutNotes\">Notes:</label></td>\n                          <td>\n                            <input type=\"text\" id=\"newWorkoutNotes\" onChange={this.handleFieldChange} defaultValue={workout.notes} className=\"edit_form_input\" style={{ width: \"90%\" }} />\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                    <button className=\"btn_edit\" onClick={() => this.constructEditedWorkout(workout.id)}>Save Edits</button>\n                  </div>\n\n                  {/* begin swishlists */}\n\n                  <Shotlog workoutId={workout.id} />\n\n                  <div id=\"workoutEditDelete\" className=\"align_right\">\n                    <button className=\"btn_edit\" onClick={() => this.toggleEditForm(workout.id)}>Edit Workout </button>\n                    <button className=\"btn_delete\" onClick={() => this.deleteWorkout(workout.id)}>Delete Workout</button>\n                  </div>\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport APIManager from '../../modules/APIManager'\nimport './Motivation.css'\n\nexport default class Motivation extends Component {\n\n  state = {\n    quotes: [],\n    initialized: false\n  }\n\n\n  componentDidMount() {\n    let array = [\n      APIManager.getAllEntries(\"quotes\")\n        .then((quotes) => {\n          this.setState({\n            quotes: quotes,\n            quoteCount: quotes.length\n          })\n        })\n    ]\n    return Promise.all(array)\n      .then(() => this.setState({\n        initialized: true,\n      }))\n  }\n\n\n  render() {\n    if (this.state.initialized === true) {\n      let randomQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)]\n\n      return (\n          <div className=\"basketball_bkg\">\n            <div id=\"motivation_container\" className=\"page_container\">\n              {/* begin contents */}\n              <h2>&nbsp;</h2>\n              <section id=\"quote_card\">\n                <div className=\"quote_card\" key={randomQuote.id}>\n                  <h2 className=\"oblique\">\"{randomQuote.quote}\"</h2>\n                  <p>- {randomQuote.author}</p>\n                </div>\n              </section>\n            </div>\n          </div>\n      )\n    } else {\n      return (\n        <div><p>loading...</p></div>\n      )\n    }\n  }\n}","import React, { Component } from \"react\"\nimport APIManager from '../../modules/APIManager'\nimport './Profile.css'\n\nexport default class Profile extends Component {\n\n  state = {\n    currentUserId: this.props.getCurrentUser(),\n    workoutLevel: \"\",\n    totalShotAttemptsArray: [],\n    totalShotsMadeArray: [],\n    initialized: false,\n  }\n\n\n  componentDidMount() {\n    let array = [\n      APIManager.getEntry(\"users\", this.state.currentUserId)\n        .then((user) => {\n          this.setState({\n            userId: user.id,\n            firstName: user.firstName,\n            lastName: user.lastName,\n            nickname: user.nickname,\n            photoURL: user.photoURL,\n            age: user.age,\n            hometown: user.hometown,\n            height_ft: user.height_ft,\n            height_in: user.height_in,\n          })\n        }),\n\n      APIManager.getAllEntries(\"workouts\", `?user_id=${this.state.currentUserId}`)\n        .then((workouts) => {\n          this.setState({\n            allWorkouts: workouts,\n            numberOfWorkouts: Number(workouts.length)\n          });\n          this.loggedWorkoutLevel(Number(workouts.length))\n        }),\n\n      APIManager.getAllEntries(\"swishlists\", `?user_id=${this.state.currentUserId}`)\n        .then((swishlists) => {\n          this.setState({\n            allSwishlists: swishlists,\n            numberOfSwishlists: Number(swishlists.length)\n          })\n          swishlists.map((shots) => {\n            this.state.totalShotAttemptsArray.push(shots.shotAttempts)\n            this.state.totalShotsMadeArray.push(shots.shotsMade)\n            return shots\n          })\n\n        })\n    ]\n\n    return Promise.all(array)\n      .then(() => this.setState({\n        initialized: true,\n      }))\n  }\n\n\n\n  loggedWorkoutLevel = (loggedWorkouts) => {\n    // console.log(loggedWorkouts)\n    if (loggedWorkouts < 10) {\n      this.setState({ workoutLevel: \"ROOKIE\" })\n    } else if (loggedWorkouts < 20) {\n      this.setState({ workoutLevel: \"SOPHOMORE\" })\n    } else if (loggedWorkouts < 50) {\n      this.setState({ workoutLevel: \"PRO\" })\n    } else if (loggedWorkouts < 100) {\n      this.setState({ workoutLevel: \"VETERAN\" })\n    } else {\n      this.setState({ workoutLevel: \"ALL-STAR\" })\n    }\n  }\n\n\n  render() {\n\n    if (this.state.initialized === true) {\n\n\n      const totalShotsAttempted = this.state.totalShotAttemptsArray.reduce((total, amount) => { return total + amount }, 0)\n      const totalShotsMade = this.state.totalShotsMadeArray.reduce((total, amount) => { return total + amount }, 0)\n      const totalPercentage = Number(((totalShotsMade / totalShotsAttempted) * 100).toFixed(1)) || 0\n\n      return (\n        <React.Fragment>\n          <div id=\"profile_container\" className=\"page_container\">\n            {/* begin contents */}\n            <h2>Player Profile</h2>\n            {\n              <div className=\"user_card\" key={this.state.userId}>\n                <div className=\"flex\">\n                  <div className=\"user_image_wrapper\">\n                    <img src={this.state.photoURL} alt={this.state.firstName} className=\"user_image\"></img>\n                  </div>\n                  <div className=\"user_details\">\n                    <h1 className=\"profile_name_header\">{this.state.firstName} {this.state.lastName}</h1>\n                    <p className=\"oblique\">aka: \"{this.state.nickname}\"</p>\n                    <p>Age: {this.state.age}</p>\n                    <p>Hometown: {this.state.hometown}</p>\n                    <p>Height: {this.state.height_ft}&#39;{this.state.height_in}\"</p>\n                  </div>\n                </div>\n\n                <p>Total Workouts Logged: {this.state.numberOfWorkouts} - Level: <span className={`${this.state.workoutLevel} user_level`}>{this.state.workoutLevel}</span></p>\n                <h3>Shooting Totals</h3>\n                <div className=\"total_card_container\">\n                  <div className=\"total_card\">\n                    <h1 className=\"total_card_digits\">{totalShotsAttempted}</h1>\n                    <p className=\"total_card_text\">Shot<br/>Attempts</p>\n                  </div>\n                  <div className=\"total_card\">\n                    <h1 className=\"total_card_digits\">{totalShotsMade}</h1>\n                    <p className=\"total_card_text\">Shots<br/>Made</p>\n                  </div>\n                  <div className=\"total_card\">\n                    <h1 className=\"total_card_digits\">{totalPercentage}%</h1>\n                    <p className=\"total_card_text\">Shooting<br/>Percentage</p>\n                  </div>\n                </div>\n              </div>\n            }\n\n          </div>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <div><p>calculating</p></div>\n      )\n    }\n  }\n\n}","import React, { Component } from \"react\"\nimport APIManager from '../../modules/APIManager'\nimport './Stats.css'\nimport '../workouts/Workouts.css'\n\nexport default class Stats extends Component {\n\n  state = {\n    shotlogs: [],\n    users: []\n  }\n\n\n  componentDidMount() {\n\n    const stateToChange = {}\n\n    APIManager.getAllEntries(\"swishlists\")\n      .then(shotlogs => {\n        stateToChange.shotlogs = shotlogs\n        return APIManager.getAllEntries(\"users\")\n      })\n      .then((users) => {\n        stateToChange.users = users\n        this.setState(stateToChange)\n      })\n\n  }\n\n\n  render() {\n\n    let usersArray = []\n    this.state.shotlogs.map((shotlog) => usersArray.push(shotlog.user_id))\n    // console.log(\"users array:\", usersArray)\n    // var uniqueItems = Array.from(new Set(usersArray))\n    // console.log(\"unique\", uniqueItems)\n\n\n\n    // const shotTotalCount = {};\n    // this.state.shotlogs.forEach(entry => {\n    //   if (!shotTotalCount[entry.user_id]) {\n    //     shotTotalCount[entry.user_id] = 0;\n    //   }\n    //   shotTotalCount[entry.user_id] += entry.shotsMade;\n    // });\n    // console.log(\"shot totals per user\", shotTotalCount)\n\n    // console.log(\"shotlogs:\", this.state.shotlogs)\n\n\n\n\n    // create new object to store results in\n    let newObj = {};\n\n    // loop through user objects\n    this.state.shotlogs.forEach(function (shotlog) {\n      // check if user_id  has already been added to newObj\n      if (!newObj[shotlog.user_id]) {\n        // If it is the first time seeing this user_id\n        // we need to add shots attempted and shots made to prevent errors\n        newObj[shotlog.user_id] = {};\n        newObj[shotlog.user_id]['user_id'] = shotlog.user_id;\n        newObj[shotlog.user_id]['shotAttempts'] = 0;\n        newObj[shotlog.user_id]['shotsMade'] = 0;\n        newObj[shotlog.user_id]['shotPercent'] = 0;\n      }\n      // add shots attempted and made to newObj for this user\n      newObj[shotlog.user_id]['shotAttempts'] += shotlog.shotAttempts\n      newObj[shotlog.user_id]['shotsMade'] += shotlog.shotsMade\n    })\n    console.log(\"new object\", Object.values(newObj))\n\n    const totalsArray = Object.values(newObj)\n\n\n\n    return (\n      <div id=\"stats_container\" className=\"page_container\">\n        {/* begin contents */}\n        <h2>Stats / Leaderboard</h2>\n        <div className=\"card_container\">\n          <div className=\"workout_card\">\n            <p>Total Shots Attempted</p>\n            <table className=\"shotlog_table\">\n              <tbody className=\"leaderboard\">\n                <tr className=\"shotlog_rowHeader\">\n                  <td width=\"40%\">Player</td>\n                  <td width=\"20%\" style={{ textAlign: \"center\" }} >Attempts</td>\n                </tr>\n\n                {\n                  totalsArray.sort((a, b) => parseFloat(b.shotAttempts) - parseFloat(a.shotAttempts))\n                    .slice(0, 5)\n                    .map((user) => {\n                      const userId = user.user_id\n                      const shotsMade = Number(user.shotsMade)\n                      const shotAttempts = Number(user.shotAttempts)\n                      const shootingPercentage = Number(((shotsMade / shotAttempts) * 100).toFixed(1))\n                      const tableRowColor = `trc_${Math.floor(((shotsMade / shotAttempts) * 10))}`\n\n                      let userFirstName = this.state.users.find(user => userId === user.id).firstName\n                      let userLastName = this.state.users.find(user => userId === user.id).lastName\n                      let userPhoto = this.state.users.find(user => userId === user.id).photoURL\n                      let userDisplayName = `${userFirstName.charAt(0)}${userLastName}`\n                      return (\n                        <tr key={user.user_id} className={`shotlog_hover ${tableRowColor}`}>\n                          <td> <img src={userPhoto} alt={userDisplayName} className=\"user_image_tiny\"></img>{userDisplayName}</td>\n                          <td style={{ textAlign: \"center\" }}>{shotAttempts} </td>\n                        </tr>\n                      )\n                    })\n                }\n\n              </tbody>\n            </table>\n          </div>\n\n        </div>\n\n\n        <div className=\"card_container\">\n          <div className=\"workout_card\">\n            <p>Total Shots Made</p>\n            <table className=\"shotlog_table\">\n              <tbody className=\"leaderboard\">\n                <tr className=\"shotlog_rowHeader\">\n                  <td width=\"40%\">Player</td>\n                  <td width=\"20%\" style={{ textAlign: \"center\" }} >Shots Made</td>\n                </tr>\n\n                {\n                  totalsArray.sort((a, b) => parseFloat(b.shotsMade) - parseFloat(a.shotsMade))\n                    .slice(0, 5)\n                    .map((user) => {\n                      const userId = user.user_id\n                      const shotsMade = Number(user.shotsMade)\n                      const shotAttempts = Number(user.shotAttempts)\n                      const shootingPercentage = Number(((shotsMade / shotAttempts) * 100).toFixed(1))\n                      const tableRowColor = `trc_${Math.floor(((shotsMade / shotAttempts) * 10))}`\n\n                      let userFirstName = this.state.users.find(user => userId === user.id).firstName\n                      let userLastName = this.state.users.find(user => userId === user.id).lastName\n                      let userDisplayName = `${userFirstName.charAt(0)}${userLastName}`\n                      return (\n                        <tr key={user.user_id} className={`shotlog_hover`}>\n                          <td style={{ padding: \"0px 8px\"}}>{userDisplayName}</td>\n                          <td style={{ textAlign: \"center\" }}>{shotsMade} </td>\n                        </tr>\n                      )\n                    })\n                }\n\n              </tbody>\n            </table>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\"\nimport { Route, Redirect } from 'react-router-dom'\nimport NewList from './workouts/NewList'\nimport ViewList from './workouts/ViewList'\nimport Motivation from './motivation/Motivation'\nimport Profile from './profiles/Profile'\nimport Stats from './stats/Stats'\n\n\nexport default class ApplicationViews extends Component {\n\n  getCurrentUser = () => {\n    const currentUser = +sessionStorage.getItem(\"userId\") || +localStorage.getItem(\"userId\")\n    return currentUser\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Route exact path=\"/\" render={() => (\n          <Redirect to=\"/newList\" />\n        )} />\n        <Route path=\"/newList\" render={props => {\n          return (\n            <NewList getCurrentUser={this.getCurrentUser} {...props} />)\n        }} />\n        <Route path=\"/viewlists\" render={props => {\n          return (\n            <ViewList getCurrentUser={this.getCurrentUser} {...props} />)\n        }} />\n        <Route path=\"/profile\" render={props => {\n          return (\n            <Profile getCurrentUser={this.getCurrentUser} {...props} />)\n        }} />\n\n        <Route path=\"/stats\" render={props => {\n          return (\n            <Stats getCurrentUser={this.getCurrentUser} {...props} />)\n        }} />\n        <Route path=\"/motivation\" render={props => {\n          return (\n            <Motivation getCurrentUser={this.getCurrentUser} {...props} />)\n        }} />\n      </React.Fragment>\n    )\n  }\n}","import React, { Component } from \"react\"\nimport Navbar from './nav/Navbar';\nimport ApplicationViews from './ApplicationViews'\n\nexport default class Swishlist extends Component {\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <ApplicationViews handleFieldChange={this.props.handleFieldChange}/>\n      </React.Fragment>\n    )\n  }\n}","import React, { Component } from \"react\"\nimport APIManager from '../../modules/APIManager'\n\nexport default class Login extends Component {\n\n  state = {\n    loginEmail: \"\",\n    loginPassword: \"\",\n    remember: \"\"\n  }\n\n  // Handles input field changes and sets state\n  handleFieldChange = (evt) => {\n    const stateToChange = {}\n    stateToChange[evt.target.id] = evt.target.value\n    this.setState(stateToChange)\n  }\n\n  handleLogin = (e) => {\n    if (this.state.loginEmail === \"\" || this.state.loginPassword === \"\") {\n      alert(\"No fields should be left blank\")\n    }\n    else {\n      APIManager.getAllEntries(\"users\", `/?email=${this.state.loginEmail}&password=${this.state.loginPassword}`)\n        .then(returns => {\n          // if theres no user/password match, throw an alert message\n          if (returns.length < 1) {\n            alert(\"That email doesn't exist or your password doesn't match. Please try again\")\n\n            // if the \"remember\" checkbox is not selected, log in user to session storage only\n          } else if (this.state.remember === \"\") {\n            sessionStorage.setItem( \"userId\", returns[0].id )\n            this.props.setCurrentUserState(returns[0].id)\n\n            // if the \"remember\" checkbox is selected, log in user to both session and local storage\n          } else {\n            localStorage.setItem( \"userId\", returns[0].id )\n            sessionStorage.setItem( \"userId\", returns[0].id )\n            this.props.setCurrentUserState( returns[0].id )\n          }\n        })\n    }\n  }\n\n\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className={this.props.hideLoginForm ? \"hide\" : \"center basketball_bkg\"}>\n        <br/><br/>\n          <div className=\"login_form\">\n            <h2 className=\"login_form_title\">SIGN IN</h2>\n\n            <label className=\"form_label\" htmlFor=\"loginEmail\">Email</label>\n            <input className=\"form_input\" onChange={this.handleFieldChange} type=\"email\" id=\"loginEmail\" placeholder=\"Email address\" required=\"\" autoFocus=\"\" />\n            <br />\n            <label className=\"form_label\" htmlFor=\"loginPassword\">Password</label>\n            <input className=\"form_input\" onChange={this.handleFieldChange} type=\"password\" id=\"loginPassword\" placeholder=\"Password\" required=\"\" />\n            <br />\n\n            <p className=\"\">\n              Remember me\n              <input className=\"\" onChange={this.handleFieldChange} type=\"checkbox\" id=\"remember\" />\n            </p>\n            <div className=\"center\">\n              <button className=\"btn_submit\" type=\"submit\" onClick={() => { this.handleLogin() }}>SIGN IN</button>\n            </div>\n          </div>\n          <div className=\"login_form\">\n            <div className=\"center\">\n              <p>First Time Here?</p>\n              <button className=\"btn_submit\" onClick={() => this.props.handleChangeForm()}>REGISTER</button>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}","import React, { Component } from \"react\"\nimport APIManager from \"../../modules/APIManager\"\n\nexport default class Register extends Component {\n\n  state = {\n    registerFName: \"\",\n    registerLName: \"\",\n    registerEmail: \"\",\n    registerNickname: \"\",\n    registerHometown: \"\",\n    registerAge: \"\",\n    registerHeightFt: \"\",\n    registerHeightIn: \"\",\n    registerPhotoURL: \"/images/profile_default.png\",\n    registerPassword: \"\",\n  }\n\n  // Handles input field changes and sets state\n  handleFieldChange = (evt) => {\n    const stateToChange = {}\n    stateToChange[evt.target.id] = evt.target.value\n    this.setState(stateToChange)\n  }\n\n\n  // Handles registration validation for new user (throws alerts on empty fields and if user email is taken\n  // Then executes constructNewUser to create new user in database\n  handleRegister = (e) => {\n\n    if (this.state.registerEmail === \"\" || this.state.registerFName === \"\" || this.state.registerPassword === \"\") {\n      alert(\"No fields should be left blank\")\n    } else if (this.state.registerEmail.includes(\"@\")) {\n      APIManager.getAllEntries(\"users\", `/?email=${this.state.registerEmail}`)\n        .then((returns) => {\n          if (returns.length > 0) {\n            alert(\"That email is already. Please use another email\")\n          } else {\n            this.constructNewUser()\n            alert(\"You are now registered! Please log in\")\n            // this.handleChangeForm()\n          }\n        })\n    } else {\n      alert(\"Please enter a valid email\")\n    }\n  }\n\n  //Handles construction of new user object, then executes registerNewUser to add new user to database\n  constructNewUser = () => {\n    const newUser = {\n      firstName: this.state.registerFName,\n      lastName: this.state.registerLName,\n      email: this.state.registerEmail,\n      nickname: this.state.registerNickname,\n      hometown: this.state.registerHometown,\n      age: this.state.registerAge,\n      height_ft: this.state.registerHeightFt,\n      height_in: this.state.registerHeightIn,\n      photoURL: this.state.registerPhotoURL,\n      password: this.state.registerPassword,\n    }\n    this.registerNewUser(newUser)\n      .then(() => console.log(newUser))\n\n  }\n\n  //Handles registration of new user object\n  registerNewUser = newUser => {\n    return APIManager.addEntry(\"users\", newUser)\n  }\n\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className={this.props.hideLoginForm ? \"center basketball_bkg\" : \"hide\"}>\n        <br/><br/>\n          <div className=\"login_form\">\n            <h2 className=\"login_form_title\">REGISTER</h2>\n\n            <label className=\"form_label\" htmlFor=\"registerFName\">First Name</label>\n            <input className=\"form_input\" onChange={this.handleFieldChange} type=\"text\" id=\"registerFName\" placeholder=\"First Name\" required=\"\" autoFocus=\"\" />\n            <br />\n            <label className=\"form_label\" htmlFor=\"registerLName\">Last Name</label>\n            <input className=\"form_input\" onChange={this.handleFieldChange} type=\"text\" id=\"registerLName\" placeholder=\"Last Name\" required=\"\" />\n            <br />\n            <label className=\"form_label\" htmlFor=\"registerEmail\">Email</label>\n            <input className=\"form_input\" onChange={this.handleFieldChange} type=\"email\" id=\"registerEmail\" placeholder=\"Email address\" required=\"\" autoFocus=\"\" />\n            <br />\n            <label className=\"form_label\" htmlFor=\"registerNickname\">Nickname \"AKA\"</label>\n            <input className=\"form_input\" onChange={this.handleFieldChange} type=\"text\" id=\"registerNickname\" placeholder=\"Nickname\" required=\"\" />\n            <br />\n            <label className=\"form_label\" htmlFor=\"registerHometown\">Hometown</label>\n            <input className=\"form_input\" onChange={this.handleFieldChange} type=\"text\" id=\"registerHometown\" placeholder=\"Hometown\" required=\"\" autoFocus=\"\" />\n            <br />\n            <label className=\"form_label\" htmlFor=\"registerAge\">Age</label>\n            <input className=\"form_input\" onChange={this.handleFieldChange} type=\"text\" id=\"registerAge\" placeholder=\"Age\" required=\"\" />\n            <br />\n            <label className=\"form_label\" htmlFor=\"registerHeight\">Height</label>\n            <select className=\"form_select\" onChange={this.handleFieldChange} type=\"text\" id=\"registerHeightFt\" required=\"\" autoFocus=\"\" >\n              <option value=\"\">Feet</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n            </select>\n            <select className=\"form_select\" onChange={this.handleFieldChange} type=\"text\" id=\"registerHeightIn\" required=\"\" autoFocus=\"\" >\n              <option value=\"\">Inches</option>\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n              <option value=\"11\">11</option>\n            </select>\n            <br />\n            <label className=\"form_label\" htmlFor=\"registerPhotoURL\">Photo URL</label>\n            <input className=\"form_input\" onChange={this.handleFieldChange} type=\"text\" id=\"registerPhotoURL\" placeholder=\"Photo URL\" required=\"\" />\n            <br />\n            <label className=\"form_label\" htmlFor=\"registerPassword\">Password</label>\n            <input className=\"form_input\" onChange={this.handleFieldChange} type=\"password\" id=\"registerPassword\" placeholder=\"Password\" required=\"\" autoFocus=\"\" />\n            <br />\n\n            <button className=\"btn_submit\"  type=\"submit\" onClick={() => { this.handleRegister() }}>REGISTER</button>\n          </div>\n\n          <div className=\"\">\n            <p>Already Registered?</p>\n            <button className=\"btn_submit\"  onClick={() => this.props.handleChangeForm()}>SIGN IN</button>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}","import React, { Component } from \"react\"\nimport Login from './Login'\nimport Register from './Register'\nimport './Authentication.css'\nimport APIManager from '../../modules/APIManager'\n\nexport default class Welcome extends Component {\n\n  state = {\n    hideLoginForm: false,\n    shotAttempts: []\n  }\n\n\n  componentDidMount() {\n\n    APIManager.getAllEntries(\"swishlists\", `?_sort=user_id&_order=desc`)\n      .then((shotlogs) => {\n        const shotAttemptsArray = []\n        shotlogs.map(shotlog => {\n          const shotAttempts = shotlog.shotsMade\n          shotAttemptsArray.push(shotAttempts)\n          return shotlog\n        })\n        return  this.setState({ shotAttempts: shotAttemptsArray })\n      })\n\n  }\n\n  handleChangeForm = () => {\n    const currentState = this.state.hideLoginForm;\n    this.setState({ hideLoginForm: !currentState });\n  };\n\n  render() {\n    const totalShots = this.state.shotAttempts.reduce((a, b) => +a + +b, 0).toLocaleString()\n    console.log(\"shot attempts from state\", totalShots)\n    return (\n      <React.Fragment>\n        <h1 className=\"logo_large center\"><span className=\"text_orange\">swish</span><span className=\"text_white\">list</span></h1>\n        <p className=\"logo_tagline_large center\">YOU MISS 100% OF THE SHOTS YOU DON'T TAKE</p>\n        <p className=\"shot_counter\">Total Swishes Listed: <span className=\"counter_glow\">{totalShots}</span></p>\n        <Login handleChangeForm={this.handleChangeForm} hideLoginForm={this.state.hideLoginForm} setCurrentUserState={this.props.setCurrentUserState}/>\n        <Register handleChangeForm={this.handleChangeForm} hideLoginForm={this.state.hideLoginForm}/>\n      </React.Fragment>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Swishlist from './components/Swishlist'\nimport Welcome from './components/authentication/Welcome'\nexport default class App extends Component {\n\n  state = {\n    currentUser: sessionStorage.getItem(\"userId\")\n  }\n\n  // This updates state whenever an input field is edited\n  handleFieldChange = (evt) => {\n    const stateToChange = {}\n    stateToChange[evt.target.id] = evt.target.value\n    this.setState(stateToChange)\n  }\n\n  isLoggedIn = () => (sessionStorage.getItem(\"userId\") !== null || localStorage.getItem(\"userId\") !== null)\n\n  getCurrentUser = () => {\n    const currentUser = +sessionStorage.getItem(\"userId\") || +localStorage.getItem(\"userId\")\n    return currentUser\n  }\n\n  setCurrentUserState = (user) => {\n    this.setState({\n      currentUser: user\n    })\n\n  }\n\n\n  isAuthenticated = () => {\n    if(this.isLoggedIn()) {\n      return (\n        <Swishlist handleFieldChange={this.handleFieldChange}/>\n      )\n    } else {\n      return (\n        <Welcome handleFieldChange={this.handleFieldChange} setCurrentUserState={this.setCurrentUserState}/>\n      )\n    }\n  }\n\n  render() {\n    return (\n      this.isAuthenticated()\n    )\n  }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n  , document.getElementById('root'));\n\n"],"sourceRoot":""}